

# 函数递归
#   函数内部调用自身

# def f1():
#     f1()
# f1()

# 递归
#   1, 找关系
#   2, 找临界值
#   3, 一定要相信自己写的函数

# 计算5!
# 5! = 5 * 4!
# 5! = 5 * 4 * 3！
# 5! = 5 * 4 * 3 * 2！
# 5! = 5 * 4 * 3 * 2 * 1！
# 5! = 5 * 4 * 3 * 2 * 1

# 1,找关系: f(n) = n * f(n-1)
#                      (n-1) * f(n-2)
# 2,找临界值: f(1) = 1

# 计算n的阶乘
def f(n):
    if n == 1:
        return 1
    return n * f(n-1)
        #  5 * f(4)
        #  5 * 4 * f(3)
        #  5 * 4 * 3 * f(2)
        #  5 * 4 * 3 * 2 * f(1)
        #  5 * 4 * 3 * 2 * 1
print(f(5))


# 1+2+3+..+100
# 1,找关系： f(n) = n + f(n-1)
# 2,找临界值：f(1) = 1

# fx计算1-n的和
def fx(n):
    if n == 1: return 1
    return n + fx(n-1)

print(fx(100))  # 5050


# 2,兔子繁殖问题。
#       设有一对新生的兔子，从第4个月开始他们每个月月初都生一对新兔子，
#       新生的兔子从第4个月开始又每个月月初生一对兔子。
#       按此规律，并假定兔子没有死亡，20个月末共有多少对兔子？
#
#               1月大的兔子  2月大的兔子  3月大的兔子   4月大的兔子(包括>4)   总
#    第1个月         1          0           0            0                 1
#    第2个月         0          1           0            0                 1
#    第3个月         0          0           1            0                 1
#    第4个月         1          0           0            1                 2
#    第5个月         1          1           0            1                 3
#    第6个月         1          1           1            1                 4
#    第7个月         2          1           1            2                 6
#    第8个月         3          2           1            3                 9
#    第9个月         4          3           2            4                 13
#     ...

# 1,找关系： f(n) = f(n-1) + f(n-3)
# 2,临界值： n=1,2,3; f(n)=1
def f(n):
    if n < 4:
        return 1
    return f(n-1) + f(n-3)

print(f(20))  # 872





